//this is the even function
bool even(void* x)
//@requires \hastag(int*, x);
{
  if (x == NULL) return false;
  if (0 <= *(int*)x && *(int*)x % 2 == 0) return true;
  return false;
}

//this is the odd function
bool odd(void* x)
//@requires \hastag(int*, x);
{
  return x == NULL ||
         0 < *(int*)x &&
         *(int*)x % 2 == 1;
}

//this is the incr function
bool incr(void* x)
//@requires \hastag(int*, x);
{
  if (x == NULL) return true;
  int* y = (int*)x;
  *y = *(int*)x + 1;
  return true;
}

//this is the find_negative function
void* find_negative(void* accum, void* x)
//@requires \hastag(int*, x);
//@requires \hastag(int*, accum);
//@ensures \hastag(int*, \result);
{
  //first check base
  if (accum != NULL && *(int*)accum < 0) return accum; 
  if (x != NULL && *(int*)x < 0) return x;
  return NULL;
}

//this function copy the queue
void* copy(void* accum, void* x)
//@requires \hastag(int*, x);
//@ensures \hastag(queue_t, \result);
{
  enq((queue_t)accum, x);
  return accum;
}

//this is the insert function
void* insert(void* accum, void* x)
/*@requires accum != NULL && \hastag(int*, accum)
            && x != NULL && \hastag(int*, x); @*/
{
  if (*(int*)x > *(int*)accum) {
    int d = *(int*)accum;
    int* y = (int*)accum;
    *y = *(int*)x;
    int* z = (int*)x;
    *z = d;
  }
  return accum;
}







