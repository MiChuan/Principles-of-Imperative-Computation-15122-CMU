#use <string>

typedef struct prof prof_t;
struct prof {
	string name;
	string title;
	string office;
	string email;
	int area_code; // 0 if no phone number
	int phone; // 0 if no phone number
};

int f(int x) {
	return 1664525 * x + 1013904223;
}

int helper2(char[] s, int length, int index) {
	if (index == length - 1) return char_ord(s[index]);
	else {
		return f(f((char_ord(s[index])) + helper2(s, length, index + 1)));
	}
}


int hash_lcg(char[] s, int length) {
	int index = 0;
    return helper2(s, length, index);

}

int hash_prof(prof_t* prof) {
  return 0; // IMPLEMENT ME
}


int hash_string(string s) {
    char[] new_s = string_to_chararray(s);
    int length = string_length(s);
    char[] res = alloc_array(char, length);
    for (int i = 0; i < length; i++) {
    	res[i] = new_s[i];
    }
    //int index = hash_mul32(res, length);
    int index = hash_lcg(res, length);
    return index;
}